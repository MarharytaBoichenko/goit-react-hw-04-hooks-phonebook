{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","App.module.css","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","components/helpers/helpers.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","reset","e","preventDefault","className","s","form","inputLabel","label","onChange","target","value","type","nameInput","required","pattern","title","button","ContactItem","id","contactItem","contactName","contactNumber","ContactList","contacts","onDeleteContact","list","map","item","onClick","Filter","filterInput","App","setContacts","filter","setFilter","parsedContactsFromLs","key","itemsFromLs","localStorage","getItem","JSON","parse","error","Error","getFromLS","useEffect","itemsToSave","setItem","stringify","saveToLS","container","contact","uuidv4","nameInContact","toLowerCase","trim","find","cont","alert","normalizedFilter","toString","includes","getVisibleContact","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.729606fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"button\":\"ContactForm_button__1MLZK\",\"nameInput\":\"ContactForm_nameInput__1yxA2\",\"inputLabel\":\"ContactForm_inputLabel__3ilUb\",\"label\":\"ContactForm_label__378f8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__5eHQm\",\"contactName\":\"ContactItem_contactName__3Zp2H\",\"contactNumber\":\"ContactItem_contactNumber__Lf19i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3YsZK\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"inputLabel\":\"Filter_inputLabel__KDsXr\",\"filterInput\":\"Filter_filterInput__u16Kg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"container\":\"App_container__1MQN3\"};","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\n\nimport s from \"./ContactForm.module.css\";\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const nameHandler = (e) => {\n    setName(e.target.value);\n  };\n  const numberHandler = (e) => {\n    setNumber(e.target.value);\n  };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleOnSubmit} className={s.form}>\n      <label className={s.inputLabel}>\n        <span className={s.label}> Name</span>\n        <input\n          onChange={nameHandler}\n          type=\"name\"\n          // name=\"name\"\n          value={name}\n          className={s.nameInput}\n          required\n        ></input>\n      </label>\n      <label className={s.inputLabel}>\n        <span className={s.label}> Number</span>\n        <input\n          type=\"tel\"\n          // name=\"number\"\n          onChange={numberHandler}\n          value={number}\n          className={s.nameInput}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nexport { ContactForm };\n","import PropTypes from 'prop-types';\nimport s from './ContactItem.module.css';\nconst ContactItem = ({ id, name, number }) => {\n  return (\n    <div className={s.contactItem}>\n      <p className={s.contactName}> {`${name}:`}</p>{' '}\n      <p className={s.contactNumber}> {number}</p>\n    </div>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\nexport { ContactItem };\n","import PropTypes from 'prop-types';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport s from './ContactList.module.css';\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <li key={id} className={s.item}>\n            <ContactItem\n              name={name}\n              number={number}\n              // onDeleteContact={onDeleteContact}\n            />\n            <button\n              type=\"button\"\n              className={s.button}\n              onClick={() => {\n                onDeleteContact(id);\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDeleteContact: PropTypes.func,\n};\nexport { ContactList };\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nconst Filter = ({ value, onChange }) => (\n  <>\n    <label className={s.inputLabel}>\n      <span className={s.label}>Find contacts by name</span>\n      <input\n        onChange={onChange}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        className={s.filterInput}\n      ></input>\n    </label>\n  </>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nexport { Filter };\n","import { useState, useEffect } from \"react\";\nimport \"./App.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ContactForm } from \"./components/ContactForm/ContactForm\";\nimport { ContactList } from \"./components/ContactList/ContactList\";\nimport { Filter } from \"./components/Filter/Filter\";\nimport { saveToLS, getFromLS } from \"./components/helpers/helpers\";\nimport s from \"./App.module.css\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  const parsedContactsFromLs = getFromLS(\"contactsData\");\n\n  useEffect(() => {\n    if (parsedContactsFromLs) {\n      setContacts(parsedContactsFromLs);\n    }\n  }, []);\n  // чтобы  только на первом ренедере  работало массив зависимостей ост  пустым\n\n  useEffect(() => {\n    saveToLS(\"contactsData\", contacts);\n  }, [contacts]);\n  // обновление при изменении  контактов\n\n  const filterHandler = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const formSubmitHandler = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    const nameInContact = contact.name.toLowerCase().trim();\n    const isInContact = contacts.find(\n      (cont) => cont.name.toLowerCase().trim() === nameInContact\n    );\n    if (isInContact) {\n      alert(`${contact.name} is already in contact`);\n      return;\n    }\n    setContacts([contact, ...contacts]);\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts(contacts.filter((contact) => contact.id !== contactId));\n  };\n\n  const getVisibleContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toString().toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <div className={s.container}>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={formSubmitHandler} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={filterHandler} />\n      <ContactList\n        contacts={getVisibleContact()}\n        onDeleteContact={deleteContact}\n      />\n    </div>\n  );\n}\n","function saveToLS(key, itemsToSave) {\n  try {\n    localStorage.setItem(key, JSON.stringify(itemsToSave));\n  } catch (error) {\n    throw new Error();\n  }\n}\n\nfunction getFromLS(key) {\n  try {\n    const itemsFromLs = localStorage.getItem(key);\n    return itemsFromLs ? JSON.parse(itemsFromLs) : null;\n  } catch (error) {\n    throw new Error();\n  }\n}\nexport { saveToLS, getFromLS };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}